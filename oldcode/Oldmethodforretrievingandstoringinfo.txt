// $fname = Yii::app()->user->fname;
// $lname = Yii::app()->user->lname;
// $phone = Yii::app()->user->phone;
// $address = Yii::app()->user->address;
// $city = Yii::app()->user->city;
// $zip = Yii::app()->user->zip;
// $state = Yii::app()->user->state;
// $userFax = Yii::app()->user->fax;
// $userID =Yii::app()->user->getId(); 
// $userEmail = Yii::app()->user->email;
// $userUsername= Yii::app()->user->username;

$this->setState('fname', $user->UserFname);
			$this->setState('lname', $user->UserLname);
			$this->setState('address', $user->UserAddress);
			$this->setState('city', $user->UserCity);
			$this->setState('zip',$user->UsertZip);
			$this->setState('phone',$user->UserPhone);
			$this->setState('state',$user->UserState);
			$this->setState('fax',$user->UserFax);
			$this->setState('email',$user->UserEmail);
			$this->setState('username',$user->UserAffiliateUsername);
/**
 * UserIdentity represents the data needed to identity a user.
 * It contains the authentication method that checks if the provided
 * data can identity the user.
 */
// class UserIdentity extends CUserIdentity
// {
	/**
	 * Authenticates a user.
	 * The example implementation makes sure if the username and password
	 * are both 'demo'.
	 * In practical applications, this should be changed to authenticate
	 * against some persistent user identity storage (e.g. database).
	 * @return boolean whether authentication succeeds.
	 */
// 	public function authenticate()
// 	{
// 		$users=array(
// 			// username => password
// 			'demo'=>'demo',
// 			'admin'=>'admin',
// 		);
// 		if(!isset($users[$this->username]))
// 			$this->errorCode=self::ERROR_USERNAME_INVALID;
// 		elseif($users[$this->username]!==$this->password)
// 			$this->errorCode=self::ERROR_PASSWORD_INVALID;
// 		else
// 			$this->errorCode=self::ERROR_NONE;
// 		return !$this->errorCode;
// 	}
// }